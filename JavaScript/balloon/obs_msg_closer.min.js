(()=>{let e='button[aria-label="閉じる"]',t="obs-msg-closer-panel";if(window.__obsMsgCloser){console.log("[obs-msg-closer] 既に起動しています");let n=document.querySelector(`#${t}`);n&&(n.style.display="block");return}window.__obsMsgCloser=!0;let o=Object.freeze({UNDETECTED:"UNDETECTED",PAUSED:"PAUSED",TYPING:"TYPING",COUNTING:"COUNTING",JUST_CLOSED:"JUST_CLOSED"}),l=` #${t} { position: fixed; inset-block-start: 12px; inset-inline-end: 12px; z-index: 1000; inline-size: 260px; background: oklch(22% 0 0 / 0.9); backdrop-filter: blur(6px); color: oklch(97% 0 0); padding: 12px 14px; border-radius: 12px; & .header { display: flex; justify-content: space-between; align-items: center; & button { inline-size: 30px; block-size: 30px; border: none; border-radius: 9999px; font: inherit; cursor: pointer; background: oklch(35% 0 0 / .9); color: oklch(96% 0 0); } & h1 { font-size: 1rem; font-weight: 700; margin: 0; } } & .body { font-size: 0.85rem; display: flex; flex-direction: column; gap: 6px; & .row { display: flex; gap: 12px; align-items: center; } & input[type="number"] { appearance: auto; -webkit-appearance: auto; inline-size: 94px; padding-block: 4px; padding-inline: 8px; border-radius: 10px; border: 1px solid color-mix(in oklch, currentColor 22%, transparent); background: oklch(28% 0 0 / .6); color: inherit; outline: none; } & .debug { font-size: 0.7rem; } } & .muted { color: oklch(82% 0 0); } & .ok { color: oklch(78% 0.12 150); } & .warn { color: oklch(80% 0.12 80); } & .err { color: oklch(70% 0.15 25); } } `,r=document.createElement("style");r.textContent=l,document.documentElement.appendChild(r);let s=document.createElement("div");s.id=t,s.innerHTML=` <div class="header"> <h1>OBS Message Closer</h1> <button id="obs-close-panel" aria-label="パネルを閉じる">\xd7</button> </div> <div class="body"> <div class="row"> <label for="obs-seconds">秒数</label> <input id="obs-seconds" type="number" min="1" step="1" value="20"> </div> <details class="debug"> <summary>デバッグ</summary> <table> <tr><td>Box</td><td id="obs-box-state" class="muted">未検出</td></tr> <tr><td>状態</td><td id="obs-status" class="warn">監視中</td></tr> <tr><td>経過</td><td><span id="obs-elapsed">0.0</span>s</td></tr> <tr><td>目標</td><td><span id="obs-target">20</span>s</td></tr> <tr><td>Text</td><td id="obs-text-state" class="muted">—</td></tr> <tr><td>ver</td><td>1.0.0</td></tr> </table> </details> </div> `,document.body.appendChild(s);let a=e=>s.querySelector(e),i=a("#obs-seconds"),d=a("#obs-box-state"),c=a("#obs-status"),u=a("#obs-elapsed"),b=a("#obs-target"),$=a("#obs-text-state");a("#obs-close-panel").onclick=()=>s.style.display="none";let p=20,x=o.UNDETECTED,m=null,C=null,k=null,E=null,y="",h=null,T=()=>c.classList.contains("err"),f=()=>{let t=document.querySelector("#root > div > div > div.MuiPaper-root.MuiPaper-elevation6");if(!t)return null;let n=t.querySelector(e);return n?t:null},_=e=>{if(!e)return!1;let t=getComputedStyle(e),n="hidden"!==t.visibility,o="none"===t.transform||"matrix(1, 0, 0, 1, 0, 0)"===t.transform;return n&&o},N=()=>{if(E)try{E.disconnect()}catch{}E=null,k=null,y="",h=null},g=e=>{let t=e.querySelector(".MuiTypography-root.MuiTypography-body1");if(!t){N(),$.textContent="—",$.className="muted";return}t!==k&&(N(),k=t,y=t.textContent||"",h=Date.now(),$.textContent="描画監視中",$.className="warn",(E=new MutationObserver(()=>{let e=t.textContent||"";e!==y&&(y=e,h=Date.now())})).observe(t,{characterData:!0,childList:!0,subtree:!0}))},w=()=>null!=h&&Date.now()-h>=400,D=(e,t)=>{d.textContent=e,d.className=t},S=(e,t)=>{$.textContent=e,$.className=t},U=(e,t)=>{T()||(c.textContent=e,c.className=t)},v=()=>{D("未検出","muted"),S("—","muted"),u.textContent="0.0",U("監視中","warn")},P=()=>{D("検出","ok"),S("—","muted"),u.textContent="0.0",U("待機中","warn")},I=()=>{D("検出","ok"),S("文字描画中","warn"),u.textContent="0.0",U("文字描画待ち","warn")},G=()=>{D("検出","ok"),S("安定","ok"),U("カウント中","ok")},O=()=>{U("閉じました（次の再表示を待機）","ok"),u.textContent="0.0"},z=()=>{let e=Number(i.value);if(Number.isInteger(e)&&e>=1){if(p=e,b.textContent=String(p),T())switch(x){case o.UNDETECTED:U("監視中","warn");break;case o.PAUSED:U("待機中","warn");break;case o.TYPING:U("文字描画待ち","warn");break;case o.COUNTING:U("カウント中","ok");break;case o.JUST_CLOSED:U("閉じました（次の再表示を待機）","ok")}}else c.textContent="1以上の整数を入力してください",c.className="err"};i.addEventListener("input",z),i.addEventListener("change",z);let L=t=>{let n=t?.querySelector(e);if(n)try{n.click()}catch{}},M=()=>{let e=f();if(!e||!document.contains(e)){x!==o.UNDETECTED&&(x=o.UNDETECTED,m=null,C=null,N()),v();return}if(!_(e)){(x!==o.PAUSED||e!==m)&&(x=o.PAUSED,m=e,C=null,N()),P();return}if(g(e),!w()){(x!==o.TYPING||e!==m)&&(x=o.TYPING,m=e,C=null),I();return}x!==o.COUNTING||e!==m?(x=o.COUNTING,m=e,C=Date.now(),G()):(null==C&&(C=Date.now()),G());let t=(Date.now()-C)/1e3;if(u.textContent=t.toFixed(1),t>=p){L(e),x=o.JUST_CLOSED,C=null,O();return}};z(),setInterval(M,200)})();